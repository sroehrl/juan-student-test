<?php

namespace Neoan3\Component\Score;

use Neoan3\Frame\Demo;
use Neoan3\Model\Score\ScoreModel;
use Neoan3\Model\User\UserModel;

/**
 * Class ScoreController
 * @package Neoan3\Component\Score
 *
 * Generated by neoan3-cli for neoan3 v3.*
 */

class ScoreController extends Demo{

    /**
    * GET: api.v1/score
    * GET: api.v1/score/{id}
    * GET: api.v1/score?{query-string}
    * @param string|null $id
    * @param array $params
    * @return array
    */
    function getScore(): array
    {
        $user = $this->Auth->restrict();
        $this->loadModel(UserModel::class);
        $this->loadModel(ScoreModel::class);
        if($user->getPayload()['user_type'] === 'teacher'){
            // get all my students
            $studentIds = $this->provider['db']->easy('user_teacher.user_id',['teacher_id'=>'$'. $user->getUserId()]);
            $students = [];
            foreach ($studentIds as $studentId){
                $students[] = UserModel::get($studentId['user_id']);
            }
            foreach ($students as $i => $student){
                $students[$i]['scores'] = ScoreModel::find(['user_id'=>'$'.$student['id']]);
            }
            return $students;
        }
        $myself = $user->getPayload();
        $myself['scores'] = ScoreModel::find(['user_id'=>'$'.$user->getUserId()]);
        return $myself;

    }

    /**
     * POST: api.v1/score
     * @param $body
     * @return array
     */
    function postScore(array $body): array
    {
        return $body;
    }
}
